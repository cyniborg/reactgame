/*! HTML5 Boilerplate v6.1.0 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
   * Remove text-shadow in selection highlight:
   * https://twitter.com/miketaylr/status/12228805301
   *
   * Vendor-prefixed and regular ::selection selectors cannot be combined:
   * https://stackoverflow.com/a/16982510/7133471
   *
   * Customize the background color to match your design.
   */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
   * A better looking default horizontal rule
   */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
   * Remove the gap between audio, canvas, iframes,
   * images, videos and the bottom of their containers:
   * https://github.com/h5bp/html5-boilerplate/issues/440
   */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
   * Remove default fieldset styles.
   */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
   * Allow only vertical resizing of textareas.
   */

textarea {
  resize: vertical;
}

/* ==========================================================================
     Browser Upgrade Prompt
     ========================================================================== */

.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

/* ==========================================================================
     Author's custom styles
     ========================================================================== */
html,
body {
  width: 100%;
  height: 100%;
  font-size: 16px;
}

body {
  overflow: hidden;
}

* {
  border: 1px solid red;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

#root,
.container {
  width: 100%;
  height: 100%;
  overflow: hidden;
  padding-top: 0px;
  padding-bottom: 0px;
  background-color: #f4f4f4;
}

.header {
  width: inherit;
  height: 25%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.header .logo {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 15%;
  flex: 0 0 15%;
  max-width: 15%;
}

.header .dashboard {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 85%;
  flex: 0 0 85%;
  max-width: 85%;
}

.body-landing,
.body-gameplay {
  position: relative;
  width: inherit;
  height: 69%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.question {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 30%;
  flex: 0 0 30%;
  max-width: 30%;
  padding-top: 20px;
  text-align: center;
}

.options {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 70%;
  flex: 0 0 70%;
  max-width: 70%;
}

.options-container {
  height: 100%;
  white-space: nowrap;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 1em;
}


div[class^="section-"] {
  width: 20%;
  position: relative;
  overflow: hidden;
}

div[class^="section-"]:hover {
  transform: scale(1.2);
  transition: transform 0.3s ease-in-out;
  cursor: pointer;
  z-index: 3;
}

.landing-text {
  text-align: center;
  position: absolute;
  left: 0;
  width: 100%;
  top: 20%;
}

.landing-box-img {
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
}

.img-responsive {
  display: block;
  max-width: 100%;
}

.footer {
  width: inherit;
  height: 6%;
}

.game-dash {
  display: flex;
  justify-content: space-around;
  align-content: center;
}

.yellow {
  background-color: #ffcc66;
}

.purple {
  background-color: #ccccff;
}

.pink {
  background-color: #ffccff;
}

.beige {
  background-color: #ffcccc;
}

.orange {
  background-color: #ffcc99;
}

.img-gameplay {
  position: absolute;
  width: 300px;
  left: 0;
  bottom: 0;
}

div[class^="opt-"] {
  min-height: 550px;
  white-space: pre-wrap;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-color: #f4f4f4;
}

div[class^="opt-"]>div {
  padding: 20px;
}

.hint-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(244, 244, 244, 0.9);
}

.hint {
  width: 75%;
  margin: 25px auto;
  background-color: whitesmoke;
  padding: 25px;
  overflow-y: scroll;
}

.level,
.score,
.Hhint {
  padding: 10px 20px;
  border-radius: 15px;
  color: white;
  text-align: center;
  filter: saturate(20);
}


/*Animations from animate css*/

@keyframes flipInY {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
}

.flipInY {
  backface-visibility: visible !important;
  animation-name: flipInY;
  animation-duration: 1s;
}

.opt-anim-enter {
  transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
  opacity: 0;
}

.opt-anim-enter-active {
  opacity: 0;
}

.opt-anim-enter-done {
  backface-visibility: visible !important;
  animation-name: flipInY;
  animation-duration: 1s;
}

.opt-anim-exit {
  opacity: 1;
}

.opt-anim-exit-active {
  opacity: 0;
  transition: all 0.5s ease-in;
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }

  50% {
    opacity: 1;
  }
}


.zoomIn {
  animation-name: zoomIn;
  animation-duration: 0.3s;
}

/*Animation ends*/







/* ==========================================================================
     Helper classes
     ========================================================================== */

/*
   * Hide visually and from screen readers
   */

.hidden {
  display: none !important;
}

/*
   * Hide only visually, but have it available for screen readers:
   * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
   *
   * 1. For long content, line feeds are not interpreted as spaces and small width
   *    causes content to wrap 1 word per line:
   *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
   */

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
  /* 1 */
}

/*
   * Extends the .visuallyhidden class to allow the element
   * to be focusable when navigated to via the keyboard:
   * https://www.drupal.org/node/897638
   */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
  white-space: inherit;
}

/*
   * Hide visually and from screen readers, but maintain layout
   */

.invisible {
  visibility: hidden;
}

/*
   * Clearfix: contain floats
   *
   * For modern browsers
   * 1. The space content is one way to avoid an Opera bug when the
   *    `contenteditable` attribute is included anywhere else in the document.
   *    Otherwise it causes space to appear at the top and bottom of elements
   *    that receive the `clearfix` class.
   * 2. The use of `table` rather than `block` is only necessary if using
   *    `:before` to contain the top-margins of child elements.
   */

.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}

.clearfix:after {
  clear: both;
}

/* ==========================================================================
     EXAMPLE Media Queries for Responsive Design.
     These examples override the primary ('mobile first') styles.
     Modify as content requires.
     ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 1.25dppx),
(min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
     Print styles.
     Inlined to avoid the additional HTTP request:
     https://www.phpied.com/delay-loading-your-print-css/
     ========================================================================== */

@media print {

  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster */
    -webkit-box-shadow: none !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " ("attr(href) ")";
  }

  abbr[title]:after {
    content: " ("attr(title) ")";
  }

  /*
       * Don't show links that are fragment identifiers,
       * or use the `javascript:` pseudo protocol
       */

  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /*
       * Printing Tables:
       * http://css-discuss.incutio.com/wiki/Printing_Tables
       */

  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}